executor: LocalExecutor
redis:
  enabled: false
rbac:
  create: true
serviceAccount:
  create: true
configuration:
  core:
    dags_folder: "/opt/bitnami/airflow/dags/git_dags"
    plugins_folder: "/opt/bitnami/airflow/plugins/git_plugins"
    load_examples: "False"
    hostname_callable: "airflow.utils.net.get_host_ip_address"
auth:
  username: airflow
  existingSecret: airflow-user
dags:
  enabled: true
  repositories:
    - repository: "https://github.com/folio-org/folio-data-anonymization.git"
      branch: "main"
      name: "dags"
      path: /folio_data_anonymization/dags
plugins:
  enabled: true
  repositories:
    - repository: "https://github.com/folio-org/folio-data-anonymization.git"
      branch: "main"
      name: "plugins"
      path: /folio_data_anonymization/plugins
web:
  extraVolumeMounts:
  - name: requirements
    mountPath: /opt/bitnami/airflow/requirements.txt
    subPath: requirements.txt
  - name: empty-dir
    mountPath: /opt/bitnami/apps
    subPath: apps
  extraVolumes:
    - name: requirements
      configMap:
        name: airflow-requirements
  extraEnvVars:
    - name: PYTHONPATH
      value: "/opt/bitnami/airflow:/opt/bitnami/apps"
  initContainers:
  - name: install-dependencies
    image: "{{ include \"airflow.image\" . }}"
    imagePullPolicy: "{{ .Values.image.pullPolicy }}"
    env:
    - name: PYTHONPATH
      value: "/opt/bitnami/airflow:/opt/bitnami/apps"
    command:
      - /bin/bash
    args:
      - -ec
      - |
        cd /opt/bitnami/airflow
        pip install --no-cache-dir --target /opt/bitnami/apps -r requirements.txt
    volumeMounts:
      - name: requirements
        mountPath: /opt/bitnami/airflow/requirements.txt
        subPath: requirements.txt
      - name: empty-dir
        mountPath: /opt/bitnami/apps
        subPath: apps
  readinessProbe:
    enabled: true
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 10
    successThreshold: 1
scheduler:
  extraVolumeMounts:
  - name: requirements
    mountPath: /opt/bitnami/airflow/requirements.txt
    subPath: requirements.txt
  - name: empty-dir
    mountPath: /opt/bitnami/apps
    subPath: apps
  extraVolumes:
    - name: requirements
      configMap:
        name: airflow-requirements
  extraEnvVars:
    - name: PYTHONPATH
      value: "/opt/bitnami/airflow:/opt/bitnami/apps"
  initContainers:
  - name: install-dependencies
    image: "{{ include \"airflow.image\" . }}"
    imagePullPolicy: "{{ .Values.image.pullPolicy }}"
    env:
    - name: PYTHONPATH
      value: "/opt/bitnami/airflow:/opt/bitnami/apps"
    command:
      - /bin/bash
    args:
      - -ec
      - |
        cd /opt/bitnami/airflow
        pip install --no-cache-dir --target /opt/bitnami/apps -r requirements.txt
    volumeMounts:
      - name: requirements
        mountPath: /opt/bitnami/airflow/requirements.txt
        subPath: requirements.txt
      - name: empty-dir
        mountPath: /opt/bitnami/apps
        subPath: apps
  resourcesPreset: "large"
  livenessProbe:
    enabled: true
    initialDelaySeconds: 180
    periodSeconds: 20
    timeoutSeconds: 60
    failureThreshold: 300
    successThreshold: 1
extraDeploy:
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: airflow-requirements
      namespace: "{{ include \"common.names.namespace\" . }}"
    data:
      requirements.txt: |-
        faker==37.1.0
        jsonpath-ng==1.7.0
        pydantic==2.11.4
